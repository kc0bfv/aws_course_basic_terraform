terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.21"
    }
  }
}

provider "aws" {
  region = "us-east-2"
}

# Create the function role and policy, and attach them
resource "aws_iam_role" "role" {
  name               = "test_iam_lambda_role"
  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": [
            "lambda.amazonaws.com"
        ]
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

resource "aws_lambda_function" "function" {
  filename         = "code.zip"
  function_name = "hello_world"
  handler       = "hello_world.hello_world"
  runtime       = "python3.9"
  role          = aws_iam_role.role.arn

  source_code_hash = filebase64sha256("code.zip")
}

resource "aws_lambda_function_url" "func_url" {
  function_name = aws_lambda_function.function.function_name
  authorization_type = "NONE"
}

output "function_url" {
  value = aws_lambda_function_url.func_url.function_url
}
